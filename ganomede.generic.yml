---
- include: "ganomede-build-image.yml"
  tags: ["ganomede", "ganomede_{{ name | mandatory }}", "build" ]
  when: (config.ganomede[name].build_image | default(definitions[name].build_image | default(False)))

- name: "Deploying ganomede.{{ name }}"
  hosts: marathon-api-server
  gather_facts: no
  tags: [ "ganomede", "marathon", "ganomede_marathon", "ganomede_{{ name | mandatory }}" ]

  vars:

    app_name: "{{ config.app_name }}/ganomede/{{ name }}"
    dns_domain: "{{ config.app_name.split('/') | reverse | join('.') }}.marathon.mesos"
    redis_proxy_host: "redis-proxy.redis.{{ dns_domain }}"
    couchdb_proxy_host: "couchdb-proxy.{{ dns_domain }}"
    marathon_wait_for_deployment: False
    service_path: "{{ definitions[name].path | default('/' + name + '/v1') }}"

    service_labels: "{{ definitions[name].labels | default({}) }}"
    default_labels:
      HAPROXY_GROUP: "external"
      HAPROXY_0_PATH: "{{ service_path }}"
      HAPROXY_0_VHOST: "{{ config.vhost|string }}"

    config_env: "{{ config.ganomede[name].env | default({}) }}"
    service_env: "{{ definitions[name].env | default({}) }}"
    service_build: "{{ definitions[name].build_image | default(False) }}"
    service_image: "{{ definitions[name].image | default((service_build | ternary('ganomede-', 'ganomede/')) + name) }}"
    service_version: "{{ config.ganomede[name].version | default(definitions[name].version) }}"
    service_has_ports: "{{ definitions[name].has_ports | default(True) }}"
    app_env: "{{ shared_env | combine(service_env) | combine(config_env) }}"

    service_health_checks:
      - protocol: HTTP
        path: "{{ definitions[name].health_check_path | default(service_path + '/ping/_health_check') }}"
        portIndex: 0
        gracePeriodSeconds: 60
        maxConsecutiveFailures: 3
        intervalSeconds: 5
        timeoutSeconds: 5

    service_port_mappings:
      - containerPort: "{{ app_env.PORT | int }}"
        hostPort: 0
        servicePort: "{{ config.ganomede[name].port }}"
        protocol: tcp

    app_health_checks: "{{ service_has_ports | ternary(service_health_checks, []) }}"
    app_ports: "{{ service_has_ports | ternary([0], []) }}"
    app_ports_mappings: "{{ service_has_ports | ternary(service_port_mappings, []) }}"
    app_cmd: "{{ definitions[name].command | default('node index.js') }}"
    app_labels: "{{ default_labels | combine(service_labels) }}"

    only_one_upgrade_strategy:
      minimumHealthCapacity: 0
      maximumOverCapacity: 0

    app_definition:
      id: "/{{ app_name }}"
      cmd: "{{ app_cmd }}"
      container:
        type: "DOCKER"
        docker:
          image: "{{ service_image }}:{{ service_version }}"
          network: "BRIDGE"
          portMappings: "{{ app_ports_mappings }}"
      env: "{{ app_env }}"
      instances: "{{ config.ganomede[name].instances | default(1) }}"
      cpus: "{{ config.ganomede[name].cpus | default(0.5) }}"
      mem: "{{ config.ganomede[name].mem | default(512) }}"
      labels: "{{ app_labels }}"
      ports: "{{ app_ports }}"
      healthChecks: "{{ app_health_checks }}"
      upgradeStrategy: "{{ (definitions[name].only_one | default(False)) | ternary(only_one_upgrade_strategy, None) }}"

  pre_tasks:
  - debug: var=app_definition

  roles:
  - role: topface.marathon_app
    marathon_url: http://{{ inventory_hostname }}:8080
    marathon_app: "{{ app_definition }}"

